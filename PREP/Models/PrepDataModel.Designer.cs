//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PrepModel", "FK_Prep_Asset_Prep_AssetType", "Prep_AssetType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PREP.Models.AssetType), "Prep_Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PREP.Models.Asset), true)]
[assembly: EdmRelationshipAttribute("PrepModel", "FK_Prep_Asset_Prep_Event", "Prep_Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PREP.Models.PrepEvent), "Prep_Asset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PREP.Models.Asset), true)]
[assembly: EdmRelationshipAttribute("PrepModel", "FK_Prep_Promo_Prep_Event", "Prep_Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PREP.Models.PrepEvent), "Prep_Promo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PREP.Models.Promo), true)]
[assembly: EdmRelationshipAttribute("PrepModel", "FK_Prep_Target_Prep_Event", "Prep_Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PREP.Models.PrepEvent), "Prep_Target", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PREP.Models.Target), true)]
[assembly: EdmRelationshipAttribute("PrepModel", "FK_Prep_Promo_Prep_PromoType", "Prep_PromoType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PREP.Models.PromoType), "Prep_Promo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PREP.Models.Promo), true)]
[assembly: EdmRelationshipAttribute("PrepModel", "FK_Prep_Target_Prep_TargetType", "Prep_TargetType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PREP.Models.TargetType), "Prep_Target", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PREP.Models.Target), true)]
[assembly: EdmRelationshipAttribute("PrepModel", "PersonPrepEvent", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PREP.Models.Person), "PrepEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PREP.Models.PrepEvent), true)]

#endregion

namespace PREP.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PrepEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PrepEntities object using the connection string found in the 'PrepEntities' section of the application configuration file.
        /// </summary>
        public PrepEntities() : base("name=PrepEntities", "PrepEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PrepEntities object.
        /// </summary>
        public PrepEntities(string connectionString) : base(connectionString, "PrepEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PrepEntities object.
        /// </summary>
        public PrepEntities(EntityConnection connection) : base(connection, "PrepEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Asset> Assets
        {
            get
            {
                if ((_Assets == null))
                {
                    _Assets = base.CreateObjectSet<Asset>("Assets");
                }
                return _Assets;
            }
        }
        private ObjectSet<Asset> _Assets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssetType> AssetTypes
        {
            get
            {
                if ((_AssetTypes == null))
                {
                    _AssetTypes = base.CreateObjectSet<AssetType>("AssetTypes");
                }
                return _AssetTypes;
            }
        }
        private ObjectSet<AssetType> _AssetTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrepEvent> PrepEvents
        {
            get
            {
                if ((_PrepEvents == null))
                {
                    _PrepEvents = base.CreateObjectSet<PrepEvent>("PrepEvents");
                }
                return _PrepEvents;
            }
        }
        private ObjectSet<PrepEvent> _PrepEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Promo> Promoes
        {
            get
            {
                if ((_Promoes == null))
                {
                    _Promoes = base.CreateObjectSet<Promo>("Promoes");
                }
                return _Promoes;
            }
        }
        private ObjectSet<Promo> _Promoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PromoType> PromoTypes
        {
            get
            {
                if ((_PromoTypes == null))
                {
                    _PromoTypes = base.CreateObjectSet<PromoType>("PromoTypes");
                }
                return _PromoTypes;
            }
        }
        private ObjectSet<PromoType> _PromoTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Target> Targets
        {
            get
            {
                if ((_Targets == null))
                {
                    _Targets = base.CreateObjectSet<Target>("Targets");
                }
                return _Targets;
            }
        }
        private ObjectSet<Target> _Targets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TargetType> TargetTypes
        {
            get
            {
                if ((_TargetTypes == null))
                {
                    _TargetTypes = base.CreateObjectSet<TargetType>("TargetTypes");
                }
                return _TargetTypes;
            }
        }
        private ObjectSet<TargetType> _TargetTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> People
        {
            get
            {
                if ((_People == null))
                {
                    _People = base.CreateObjectSet<Person>("People");
                }
                return _People;
            }
        }
        private ObjectSet<Person> _People;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssets(Asset asset)
        {
            base.AddObject("Assets", asset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssetTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssetTypes(AssetType assetType)
        {
            base.AddObject("AssetTypes", assetType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrepEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrepEvents(PrepEvent prepEvent)
        {
            base.AddObject("PrepEvents", prepEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Promoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromoes(Promo promo)
        {
            base.AddObject("Promoes", promo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PromoTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromoTypes(PromoType promoType)
        {
            base.AddObject("PromoTypes", promoType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Targets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTargets(Target target)
        {
            base.AddObject("Targets", target);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TargetTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTargetTypes(TargetType targetType)
        {
            base.AddObject("TargetTypes", targetType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPeople(Person person)
        {
            base.AddObject("People", person);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrepModel", Name="Asset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Asset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Asset object.
        /// </summary>
        /// <param name="assetID">Initial value of the AssetID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="assetTypeID">Initial value of the AssetTypeID property.</param>
        public static Asset CreateAsset(global::System.Int32 assetID, global::System.Int32 eventID, global::System.Int32 assetTypeID)
        {
            Asset asset = new Asset();
            asset.AssetID = assetID;
            asset.EventID = eventID;
            asset.AssetTypeID = assetTypeID;
            return asset;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetID
        {
            get
            {
                return _AssetID;
            }
            set
            {
                if (_AssetID != value)
                {
                    OnAssetIDChanging(value);
                    ReportPropertyChanging("AssetID");
                    _AssetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssetID");
                    OnAssetIDChanged();
                }
            }
        }
        private global::System.Int32 _AssetID;
        partial void OnAssetIDChanging(global::System.Int32 value);
        partial void OnAssetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetTypeID
        {
            get
            {
                return _AssetTypeID;
            }
            set
            {
                OnAssetTypeIDChanging(value);
                ReportPropertyChanging("AssetTypeID");
                _AssetTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssetTypeID");
                OnAssetTypeIDChanged();
            }
        }
        private global::System.Int32 _AssetTypeID;
        partial void OnAssetTypeIDChanging(global::System.Int32 value);
        partial void OnAssetTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Asset_Prep_AssetType", "Prep_AssetType")]
        public AssetType Prep_AssetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("PrepModel.FK_Prep_Asset_Prep_AssetType", "Prep_AssetType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("PrepModel.FK_Prep_Asset_Prep_AssetType", "Prep_AssetType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssetType> Prep_AssetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssetType>("PrepModel.FK_Prep_Asset_Prep_AssetType", "Prep_AssetType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssetType>("PrepModel.FK_Prep_Asset_Prep_AssetType", "Prep_AssetType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Asset_Prep_Event", "Prep_Event")]
        public PrepEvent Prep_Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Asset_Prep_Event", "Prep_Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Asset_Prep_Event", "Prep_Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrepEvent> Prep_EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Asset_Prep_Event", "Prep_Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrepEvent>("PrepModel.FK_Prep_Asset_Prep_Event", "Prep_Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrepModel", Name="AssetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssetType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssetType object.
        /// </summary>
        /// <param name="assetTypeID">Initial value of the AssetTypeID property.</param>
        /// <param name="asset">Initial value of the Asset property.</param>
        public static AssetType CreateAssetType(global::System.Int32 assetTypeID, global::System.String asset)
        {
            AssetType assetType = new AssetType();
            assetType.AssetTypeID = assetTypeID;
            assetType.Asset = asset;
            return assetType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssetTypeID
        {
            get
            {
                return _AssetTypeID;
            }
            set
            {
                if (_AssetTypeID != value)
                {
                    OnAssetTypeIDChanging(value);
                    ReportPropertyChanging("AssetTypeID");
                    _AssetTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssetTypeID");
                    OnAssetTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AssetTypeID;
        partial void OnAssetTypeIDChanging(global::System.Int32 value);
        partial void OnAssetTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Asset
        {
            get
            {
                return _Asset;
            }
            set
            {
                OnAssetChanging(value);
                ReportPropertyChanging("Asset");
                _Asset = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Asset");
                OnAssetChanged();
            }
        }
        private global::System.String _Asset;
        partial void OnAssetChanging(global::System.String value);
        partial void OnAssetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PicturePath
        {
            get
            {
                return _PicturePath;
            }
            set
            {
                OnPicturePathChanging(value);
                ReportPropertyChanging("PicturePath");
                _PicturePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PicturePath");
                OnPicturePathChanged();
            }
        }
        private global::System.String _PicturePath;
        partial void OnPicturePathChanging(global::System.String value);
        partial void OnPicturePathChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Asset_Prep_AssetType", "Prep_Asset")]
        public EntityCollection<Asset> Prep_Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("PrepModel.FK_Prep_Asset_Prep_AssetType", "Prep_Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("PrepModel.FK_Prep_Asset_Prep_AssetType", "Prep_Asset", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrepModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="appEntityID">Initial value of the AppEntityID property.</param>
        public static Person CreatePerson(global::System.Int32 appEntityID)
        {
            Person person = new Person();
            person.AppEntityID = appEntityID;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AppEntityID
        {
            get
            {
                return _AppEntityID;
            }
            set
            {
                if (_AppEntityID != value)
                {
                    OnAppEntityIDChanging(value);
                    ReportPropertyChanging("AppEntityID");
                    _AppEntityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AppEntityID");
                    OnAppEntityIDChanged();
                }
            }
        }
        private global::System.Int32 _AppEntityID;
        partial void OnAppEntityIDChanging(global::System.Int32 value);
        partial void OnAppEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PersonTypeID
        {
            get
            {
                return _PersonTypeID;
            }
            set
            {
                OnPersonTypeIDChanging(value);
                ReportPropertyChanging("PersonTypeID");
                _PersonTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonTypeID");
                OnPersonTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PersonTypeID;
        partial void OnPersonTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPersonTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Suffix
        {
            get
            {
                return _Suffix;
            }
            set
            {
                OnSuffixChanging(value);
                ReportPropertyChanging("Suffix");
                _Suffix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Suffix");
                OnSuffixChanged();
            }
        }
        private global::System.String _Suffix;
        partial void OnSuffixChanging(global::System.String value);
        partial void OnSuffixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> rowguid
        {
            get
            {
                return _rowguid;
            }
            set
            {
                OnrowguidChanging(value);
                ReportPropertyChanging("rowguid");
                _rowguid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rowguid");
                OnrowguidChanged();
            }
        }
        private Nullable<global::System.Guid> _rowguid;
        partial void OnrowguidChanging(Nullable<global::System.Guid> value);
        partial void OnrowguidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "PersonPrepEvent", "PrepEvent")]
        public EntityCollection<PrepEvent> PrepEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrepEvent>("PrepModel.PersonPrepEvent", "PrepEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrepEvent>("PrepModel.PersonPrepEvent", "PrepEvent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrepModel", Name="PrepEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrepEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrepEvent object.
        /// </summary>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="subject">Initial value of the Subject property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="isFullDay">Initial value of the IsFullDay property.</param>
        public static PrepEvent CreatePrepEvent(global::System.Int32 eventID, global::System.String subject, global::System.DateTime start, global::System.Boolean isFullDay)
        {
            PrepEvent prepEvent = new PrepEvent();
            prepEvent.EventID = eventID;
            prepEvent.Subject = subject;
            prepEvent.Start = start;
            prepEvent.IsFullDay = isFullDay;
            return prepEvent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                if (_EventID != value)
                {
                    OnEventIDChanging(value);
                    ReportPropertyChanging("EventID");
                    _EventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventID");
                    OnEventIDChanged();
                }
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> End
        {
            get
            {
                return _End;
            }
            set
            {
                OnEndChanging(value);
                ReportPropertyChanging("End");
                _End = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("End");
                OnEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _End;
        partial void OnEndChanging(Nullable<global::System.DateTime> value);
        partial void OnEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Presentation
        {
            get
            {
                return _Presentation;
            }
            set
            {
                OnPresentationChanging(value);
                ReportPropertyChanging("Presentation");
                _Presentation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Presentation");
                OnPresentationChanged();
            }
        }
        private Nullable<global::System.Int32> _Presentation;
        partial void OnPresentationChanging(Nullable<global::System.Int32> value);
        partial void OnPresentationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Exposure
        {
            get
            {
                return _Exposure;
            }
            set
            {
                OnExposureChanging(value);
                ReportPropertyChanging("Exposure");
                _Exposure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exposure");
                OnExposureChanged();
            }
        }
        private Nullable<global::System.Int32> _Exposure;
        partial void OnExposureChanging(Nullable<global::System.Int32> value);
        partial void OnExposureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ComEvent
        {
            get
            {
                return _ComEvent;
            }
            set
            {
                OnComEventChanging(value);
                ReportPropertyChanging("ComEvent");
                _ComEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComEvent");
                OnComEventChanged();
            }
        }
        private Nullable<global::System.Int32> _ComEvent;
        partial void OnComEventChanging(Nullable<global::System.Int32> value);
        partial void OnComEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Attend
        {
            get
            {
                return _Attend;
            }
            set
            {
                OnAttendChanging(value);
                ReportPropertyChanging("Attend");
                _Attend = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Attend");
                OnAttendChanged();
            }
        }
        private Nullable<global::System.Int32> _Attend;
        partial void OnAttendChanging(Nullable<global::System.Int32> value);
        partial void OnAttendChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EnteredBy
        {
            get
            {
                return _EnteredBy;
            }
            set
            {
                OnEnteredByChanging(value);
                ReportPropertyChanging("EnteredBy");
                _EnteredBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnteredBy");
                OnEnteredByChanged();
            }
        }
        private Nullable<global::System.Int32> _EnteredBy;
        partial void OnEnteredByChanging(Nullable<global::System.Int32> value);
        partial void OnEnteredByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EnteredDate
        {
            get
            {
                return _EnteredDate;
            }
            set
            {
                OnEnteredDateChanging(value);
                ReportPropertyChanging("EnteredDate");
                _EnteredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EnteredDate");
                OnEnteredDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EnteredDate;
        partial void OnEnteredDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnteredDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFullDay
        {
            get
            {
                return _IsFullDay;
            }
            set
            {
                OnIsFullDayChanging(value);
                ReportPropertyChanging("IsFullDay");
                _IsFullDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFullDay");
                OnIsFullDayChanged();
            }
        }
        private global::System.Boolean _IsFullDay;
        partial void OnIsFullDayChanging(global::System.Boolean value);
        partial void OnIsFullDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThemeColor
        {
            get
            {
                return _ThemeColor;
            }
            set
            {
                OnThemeColorChanging(value);
                ReportPropertyChanging("ThemeColor");
                _ThemeColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThemeColor");
                OnThemeColorChanged();
            }
        }
        private global::System.String _ThemeColor;
        partial void OnThemeColorChanging(global::System.String value);
        partial void OnThemeColorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Asset_Prep_Event", "Prep_Asset")]
        public EntityCollection<Asset> Prep_Asset
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Asset>("PrepModel.FK_Prep_Asset_Prep_Event", "Prep_Asset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Asset>("PrepModel.FK_Prep_Asset_Prep_Event", "Prep_Asset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Promo_Prep_Event", "Prep_Promo")]
        public EntityCollection<Promo> Prep_Promo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Promo>("PrepModel.FK_Prep_Promo_Prep_Event", "Prep_Promo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Promo>("PrepModel.FK_Prep_Promo_Prep_Event", "Prep_Promo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Target_Prep_Event", "Prep_Target")]
        public EntityCollection<Target> Prep_Target
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Target>("PrepModel.FK_Prep_Target_Prep_Event", "Prep_Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Target>("PrepModel.FK_Prep_Target_Prep_Event", "Prep_Target", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "PersonPrepEvent", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PrepModel.PersonPrepEvent", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PrepModel.PersonPrepEvent", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("PrepModel.PersonPrepEvent", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("PrepModel.PersonPrepEvent", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrepModel", Name="Promo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Promo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Promo object.
        /// </summary>
        /// <param name="promoID">Initial value of the PromoID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static Promo CreatePromo(global::System.Int32 promoID, global::System.Int32 eventID, global::System.Int32 typeID)
        {
            Promo promo = new Promo();
            promo.PromoID = promoID;
            promo.EventID = eventID;
            promo.TypeID = typeID;
            return promo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PromoID
        {
            get
            {
                return _PromoID;
            }
            set
            {
                if (_PromoID != value)
                {
                    OnPromoIDChanging(value);
                    ReportPropertyChanging("PromoID");
                    _PromoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromoID");
                    OnPromoIDChanged();
                }
            }
        }
        private global::System.Int32 _PromoID;
        partial void OnPromoIDChanging(global::System.Int32 value);
        partial void OnPromoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Promo_Prep_Event", "Prep_Event")]
        public PrepEvent Prep_Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Promo_Prep_Event", "Prep_Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Promo_Prep_Event", "Prep_Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrepEvent> Prep_EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Promo_Prep_Event", "Prep_Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrepEvent>("PrepModel.FK_Prep_Promo_Prep_Event", "Prep_Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Promo_Prep_PromoType", "Prep_PromoType")]
        public PromoType Prep_PromoType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromoType>("PrepModel.FK_Prep_Promo_Prep_PromoType", "Prep_PromoType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromoType>("PrepModel.FK_Prep_Promo_Prep_PromoType", "Prep_PromoType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PromoType> Prep_PromoTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromoType>("PrepModel.FK_Prep_Promo_Prep_PromoType", "Prep_PromoType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PromoType>("PrepModel.FK_Prep_Promo_Prep_PromoType", "Prep_PromoType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrepModel", Name="PromoType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PromoType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PromoType object.
        /// </summary>
        /// <param name="promoTypeID">Initial value of the PromoTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static PromoType CreatePromoType(global::System.Int32 promoTypeID, global::System.String type)
        {
            PromoType promoType = new PromoType();
            promoType.PromoTypeID = promoTypeID;
            promoType.Type = type;
            return promoType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PromoTypeID
        {
            get
            {
                return _PromoTypeID;
            }
            set
            {
                if (_PromoTypeID != value)
                {
                    OnPromoTypeIDChanging(value);
                    ReportPropertyChanging("PromoTypeID");
                    _PromoTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromoTypeID");
                    OnPromoTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PromoTypeID;
        partial void OnPromoTypeIDChanging(global::System.Int32 value);
        partial void OnPromoTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Promo_Prep_PromoType", "Prep_Promo")]
        public EntityCollection<Promo> Prep_Promo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Promo>("PrepModel.FK_Prep_Promo_Prep_PromoType", "Prep_Promo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Promo>("PrepModel.FK_Prep_Promo_Prep_PromoType", "Prep_Promo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrepModel", Name="Target")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Target : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Target object.
        /// </summary>
        /// <param name="targetID">Initial value of the TargetID property.</param>
        /// <param name="eventID">Initial value of the EventID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static Target CreateTarget(global::System.Int32 targetID, global::System.Int32 eventID, global::System.Int32 typeID)
        {
            Target target = new Target();
            target.TargetID = targetID;
            target.EventID = eventID;
            target.TypeID = typeID;
            return target;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TargetID
        {
            get
            {
                return _TargetID;
            }
            set
            {
                if (_TargetID != value)
                {
                    OnTargetIDChanging(value);
                    ReportPropertyChanging("TargetID");
                    _TargetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TargetID");
                    OnTargetIDChanged();
                }
            }
        }
        private global::System.Int32 _TargetID;
        partial void OnTargetIDChanging(global::System.Int32 value);
        partial void OnTargetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private global::System.Int32 _EventID;
        partial void OnEventIDChanging(global::System.Int32 value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Target_Prep_Event", "Prep_Event")]
        public PrepEvent Prep_Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Target_Prep_Event", "Prep_Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Target_Prep_Event", "Prep_Event").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrepEvent> Prep_EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrepEvent>("PrepModel.FK_Prep_Target_Prep_Event", "Prep_Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrepEvent>("PrepModel.FK_Prep_Target_Prep_Event", "Prep_Event", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Target_Prep_TargetType", "Prep_TargetType")]
        public TargetType Prep_TargetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TargetType>("PrepModel.FK_Prep_Target_Prep_TargetType", "Prep_TargetType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TargetType>("PrepModel.FK_Prep_Target_Prep_TargetType", "Prep_TargetType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TargetType> Prep_TargetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TargetType>("PrepModel.FK_Prep_Target_Prep_TargetType", "Prep_TargetType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TargetType>("PrepModel.FK_Prep_Target_Prep_TargetType", "Prep_TargetType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrepModel", Name="TargetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TargetType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TargetType object.
        /// </summary>
        /// <param name="targetTypeID">Initial value of the TargetTypeID property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static TargetType CreateTargetType(global::System.Int32 targetTypeID, global::System.String type)
        {
            TargetType targetType = new TargetType();
            targetType.TargetTypeID = targetTypeID;
            targetType.Type = type;
            return targetType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TargetTypeID
        {
            get
            {
                return _TargetTypeID;
            }
            set
            {
                if (_TargetTypeID != value)
                {
                    OnTargetTypeIDChanging(value);
                    ReportPropertyChanging("TargetTypeID");
                    _TargetTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TargetTypeID");
                    OnTargetTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TargetTypeID;
        partial void OnTargetTypeIDChanging(global::System.Int32 value);
        partial void OnTargetTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrepModel", "FK_Prep_Target_Prep_TargetType", "Prep_Target")]
        public EntityCollection<Target> Prep_Target
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Target>("PrepModel.FK_Prep_Target_Prep_TargetType", "Prep_Target");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Target>("PrepModel.FK_Prep_Target_Prep_TargetType", "Prep_Target", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
